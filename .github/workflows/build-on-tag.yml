# This workflow builds the app and uploads the artifact to github releases whenever a new version tag(e.g., v1.0.0) is pushed to the main branch.

name: Build and Release on Tag

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.8
  FLET_CLI_VERSION: 0.27.5
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1
  UV_NO_PROGRESS: 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux]

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Python
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Step 3: Install flet-cli and pyinstaller
      - name: Install flet-cli and pyinstaller
        run: |
          python -m pip install --upgrade pip
          pip install flet-cli==$FLET_CLI_VERSION pyinstaller

      # Step 4: Patch for linux build (install required system dependencies)
      - name: Patch for linux build
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libmpv-dev libmpv2
          sudo ln -s /usr/lib/x86_64-linux-gnu/libmpv.so /usr/lib/libmpv.so.1 || true

      # Step 5: Pack the Linux app using Flet
      - name: Flet Pack Linux
        run: |
          flet pack src/main.py --verbose --yes

      # Step 6: Upload AppImage to GitHub Releases
      - name: Upload AppImage to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: build/linux/age-calculator-${{ github.ref_name }}.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
